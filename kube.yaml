---
- name: Install kubectl and Helm on Management Server
  hosts: localhost
  become: yes
  tasks:

    - name: Get the latest kubectl version
      uri:
        url: "https://dl.k8s.io/release/stable.txt"
        return_content: yes
      register: kubectl_version

    - name: Download the latest kubectl release
      get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.content | trim }}/bin/linux/amd64/kubectl"
        dest: /home/ubuntu/kubectl
        mode: '0755'

    - name: Download the kubectl checksum file
      get_url:
        url: "https://dl.k8s.io/{{ kubectl_version.content | trim }}/bin/linux/amd64/kubectl.sha256"
        dest: /home/ubuntu/kubectl.sha256

    - name: Ensure checksum file exists
      stat:
        path: /home/ubuntu/kubectl.sha256
      register: checksum_file

    - name: Fail if checksum file is missing
      fail:
        msg: "Checksum file kubectl.sha256 is missing!"
      when: not checksum_file.stat.exists

    - name: Validate kubectl binary against the checksum file
      shell: |
        echo "$(cat /home/ubuntu/kubectl.sha256)  kubectl" | sha256sum --check
      args:
        chdir: /home/ubuntu/

    - name: Install kubectl
      command: sudo install -o root -g root -m 0755 /home/ubuntu/kubectl /usr/local/bin/kubectl

    - name: Test kubectl version
      command: kubectl version --client
      register: kubectl_version_test
      failed_when: kubectl_version_test.rc != 0
      changed_when: false

    - name: Install Helm
      block:

        - name: Download the Helm installation script
          get_url:
            url: "https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
            dest: /home/ubuntu/get_helm.sh

        - name: Set execute permission on Helm installation script
          file:
            path: /home/ubuntu/get_helm.sh
            mode: '0700'

        - name: Run Helm installation script
          shell: |
            /home/ubuntu/get_helm.sh
          args:
            creates: /usr/local/bin/helm

    - name: Install RKE
      block:

        - name: Download the latest RKE release URL
          uri:
            url: "https://api.github.com/repos/rancher/rke/releases/latest"
            return_content: yes
          register: rke_release

        - name: Extract download URL for RKE binary (amd64)
          set_fact:
            rke_download_url: "{{ rke_release.content | from_json | json_query('assets[?name==`rke_linux-amd64`].browser_download_url | [0]') }}"

        - name: Download the RKE binary
          get_url:
            url: "{{ rke_download_url }}"
            dest: /home/ubuntu/rke_linux-amd64
            mode: '0755'

        - name: Move the RKE binary to /usr/local/bin
          command: sudo mv /home/ubuntu/rke_linux-amd64 /usr/local/bin/rke

        - name: Verify RKE installation
          command: rke --version
          register: rke_version
          failed_when: rke_version.rc != 0
          changed_when: false
